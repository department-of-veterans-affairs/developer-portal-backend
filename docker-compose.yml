version: '3.7'

services:
  app:
    build:
      context: .
      target: base
    image: developer-portal-backend
    ports:
      - 9999:9999
    volumes:
      # map local to remote folder, exclude node_modules
      - .:/home/node
      - /home/node/node_modules
    command: npm run watch
    depends_on:
      - kong
    restart: on-failure
    env_file: '.env'

  kong-migrations:
    image: kong:1.2.2
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong  
    restart: on-failure

  kong-migrations-up:
    image: kong:1.2.2
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong  
    restart: on-failure

  kong-database:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 60s
      timeout: 5s
      retries: 5

  kong:
    image: kong:1.2.2
    ports:
      - 8001:8001
      - 8000:8000
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_ACCESS_LOG='/dev/stdout'
      - KONG_ADMIN_ERROR_LOG='/dev/stderr'
    expose:
      - 8000
      - 8001
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10
    command: kong docker-start
    restart: on-failure

  kong-create-admin:
    image: developer-portal-backend
    env_file: '.env'
    depends_on:
      - kong-migrations
    restart: on-failure
    command: bash add_kong_admin.sh

  dynamodb:
    image: amazon/dynamodb-local
    ports:
      - 8080:8000
  dynamodb-migration:
    image: developer-portal-backend
    env_file: '.env'
    depends_on:
      - dynamodb
    command: node dynamodb_schema.js
