version: 0.2

env:
  git-credential-helper: yes
  parameter-store:
    GITHUB_TOKEN: "/dvp/devops/va_bot_github_token"
phases:
  install:
    commands:
    - apt update
    - apt-get -y install awscli jq python3-pip apt-transport-https ca-certificates software-properties-common gnupg
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    - echo "deb https://download.docker.com/linux/debian stretch stable" | tee /etc/apt/sources.list.d/docker.list
    - apt update
    - apt-get -y install docker-ce
    - pip3 install --upgrade awscli
    - pip3 install ecs-deploy
    - curl -LOk https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz
    - tar zxvf hub-linux-amd64-2.14.2.tgz
    - cp hub-linux-amd64-2.14.2/bin/hub /usr/local/bin
  pre_build:
    commands:
    - echo Logging into ECR
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - echo Creating release...
    - hub release create -m $(cicd/increment.sh $(hub tag|tail -1)) -t master $(cicd/increment.sh $(hub tag|tail -1))
    - echo Tagging ECR image...
    - python3 cicd/tag_containers.py -n dev-portal-backend-ci -i ${CODEBUILD_RESOLVED_SOURCE_VERSION} -r dvp/developer-portal-backend -v $(cicd/increment.sh $(hub tag|tail -1))
  build:
    commands:
    - echo Triggering deploy to dev...
    - ecs deploy -t $(cicd/increment.sh $(hub tag|tail -1)) -e dvp-dev-dev-portal-be CHAMBER_ENV dev -e dvp-dev-dev-portal-be AWS_APP_NAME developer-portal-backend --timeout 1200 dev_dev_portal_be_cluster dvp-dev-dev-portal-be
  post_build:
    commands:
